(function (e) { function n(t, n) { try { var o = true; var u = t.find(":input"); e.each(u, function () { if (e(this).hasClass("cep") && e.trim(e(this).val()) != "") { var t = e.ajax({ url: "http://cep.republicavirtual.com.br/web_cep.php?cep=" + e.trim(e(this).val().replace("-", "")) + "&formato=json", async: false }).responseText; t = e.parseJSON(t); if (t.resultado == 0) { o = r(e(this), n.cepMsg, "cep") } else { s(e(this)) } } if (e(this).hasClass("email")) { var u = new RegExp(/^[A-Za-z0-9_\-\.]+@[A-Za-z0-9_\-\.]{2,}\.[A-Za-z0-9]{2,}(\.[A-Za-z0-9])?/); if (!u.test(e.trim(e(this).val()))) { o = r(e(this), n.emailMsg, "email") } else s(e(this)) } if (e(this).hasClass("date")) { var a = e(this).val(); if (a.length != 10) { o = r(e(this), n.dataMsg) } var f = sdate.substr(0, 2); var l = sdate.substr(2, 1); var c = sdate.substr(3, 2); var h = sdate.substr(5, 1); var p = sdate.substr(6, 4); if (sdate.length != 10 || l != "/" || h != "/" || isNaN(f) || isNaN(c) || isNaN(p) || f > 31 || c > 12 || (c == 4 || c == 6 || c == 9 || c == 11) && f == 31 || c == 2 && (f > 29 || f == 29 && p % 4 != 0) || p < 1900) { o = r(e(this), n.dataMsg, "date") } } if (e(this).hasClass("cpf")) { var d = e(this).val().replace(".", ""); d = d.replace(".", ""); d = d.replace("-", ""); while (d.length < 11) d = "0" + d; var v = /^0+$|^1+$|^2+$|^3+$|^4+$|^5+$|^6+$|^7+$|^8+$|^9+$/; var m = []; var g = new Number; var b = 11; for (i = 0; i < 11; i++) { m[i] = d.charAt(i); if (i < 9) g += m[i] * --b } if ((x = g % 11) < 2) { m[9] = 0 } else { m[9] = 11 - x } g = 0; b = 11; for (y = 0; y < 10; y++) g += m[y] * b--; if ((x = g % 11) < 2) { m[10] = 0 } else { m[10] = 11 - x } if (d.charAt(9) != m[9] || d.charAt(10) != m[10] || d.match(v)) { o = r(e(this), n.cpfMsg, "cpf") } } if (e(this).hasClass("cnpj")) { var w = e(this).val(); w = w.replace(".", ""); w = w.replace(".", ""); w = w.replace("/", ""); w = w.replace("-", ""); var m = new Array; var g = new Number; var b = [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]; for (i = 0; i < 12; i++) { m[i] = w.charAt(i); g += m[i] * b[i + 1] } if ((x = g % 11) < 2) { m[12] = 0 } else { m[12] = 11 - x } g = 0; for (y = 0; y < 13; y++) { g += m[y] * b[y] } if ((x = g % 11) < 2) { m[13] = 0 } else { m[13] = 11 - x } if (w.charAt(12) != m[12] || w.charAt(13) != m[13]) { o = r(e(this), n.cnpjMsg, "cnpj") } } if (e(this).hasClass("password") && e(this).parent().parent().find(".password").hasClass("password")) { if (e.trim(e(this).val()) != e.trim(e(this).parent().parent().find(".password").val())) { o = r(e(this), n.passwordMsg, "password") } } if (e(this).attr("data-pattern")) { if (e.trim(e(this).val()).match(new RegExp(e(this).attr("data-pattern"))) == null) { o = r(e(this), n.passwordMsg, "pattern") } else s(e(this)) } if (e(this).hasClass("required") && e.trim(e(this).val()) == "") { o = r(e(this), n.requiredMsg, "required") } if (e(this).attr("type") == "radio" && e(this).hasClass("required")) { var E = e(this).attr("name"); if (!e('input[name="' + E + '"]').is(":checked")) { o = r(e(this), n.radioMsg, "required") } else s(e(this)) } if (e(this).attr("type") == "checkbox" && e(this).hasClass("required")) { var E = e(this).attr("name"); if (e('input[name="' + e(this).attr("name") + '"]:checked').length == 0) { o = r(e(this), n.checkedMsg, "required") } else s(e(this)) } if (e(this).val().length > 0 && e(this).attr("data-minlength")) { if (e.trim(e(this).val()).length < e(this).attr("data-minlength")) { o = r(e(this), n.minMsg.replace(/§/g, e(this).attr("data-minlength")), "minlength") } else s(e(this)) } if (e(this).attr("data-maxlength")) { if (e.trim(e(this).val()).length > e(this).attr("data-maxlength")) { o = r(e(this), n.minMsg.replace(/§/g, e(this).attr("data-maxlength")), "maxlength") } else s(e(this)) } if (e(this).hasClass("numeric")) { var S = new RegExp(/(^-?\d\d*\.\d*$)|(^-?\d\d*$)|(^-?\.\d\d*$)/); if (!S.test(e.trim(e(this).val()))) { o = r(e(this), n.numericMsg, "numeric") } else s(e(this)) } if (o) { s(e(this)) } }); return o } catch (a) { console.log("Error in " + a.description) } } function r(n, r, i) { if (n.attr("data-msg-" + i)) r = n.attr("data-msg-" + i); n.removeClass("valid").addClass("invalid"); if (n.parent().find("span.error-msg").length > 0) n.parent().find("span.error-msg").text(r); else n.parent().append("<span class='error-msg'>" + r + "</span>"); if (e.isFunction(t.ifInvalid)) { var s = e.Callbacks(); s.add(t.ifInvalid); s.fire(n, r, i) } return false } function s(n) { n.removeClass("invalid").addClass("valid"); var r = n.parent().find("span.error-msg"); if (t.ifValid != null && e.isFunction(t.ifValid)) { var i = e.Callbacks(); i.add(t.ifValid); i.fire(n) } } var t; e.fn.validate = function (i) { var o = e.extend({ mask: true, requiredMsg: "Campo Requerido!", radioMsg: "Selecione uma opção!", checkedMsg: "Marque uma opção!", emailMsg: "O e-mail informado é inválido!", cpfMsg: "CPF informado é inválido!", cnpjMsg: "CNPJ informado é inválido!", dateMsg: "Data informada é inválida!", numericMsg: "O valor deve ser númerico!", minlengthMsg: "Informe ao menos § caracteres!", maxlengthMsg: "A quantidade máxima é de § caracteres!", passwordMsg: "Senhas não conferem!", phoneMsg: "O telefone informado é inválido!", cepMsg: "Cep não encontrado, informe um CEP válido.", callbackCep: null, ifValid: null, ifInvalid: null }, i); if (o.mask) { if (e(this).find(".date").length > 0) e(this).find(".date").mask("99/99/9999"); if (e(this).find(".cpf").length > 0) e(this).find(".cpf").mask("999.999.999-99"); if (e(this).find(".cnpj").length > 0) e(this).find(".cnpj").mask("99.999.999/9999-99"); if (e(this).find(".plate").length > 0) e(this).find(".plate").mask("aaa-9999"); if (e(this).find(".phone").length > 0) { var u = { onKeyPress: function (t) { var n = ["(00)0000-00009", "(00)00000-0000"]; mask = t.length > 13 ? n[1] : n[0]; e(this).find(".phone").mask(mask, this) } }; e(this).find(".phone").mask("(00)0000-00009", u) } if (e(this).find(".cep").length > 0) e(this).find(".cep").mask("99999-999") } var a = e(this); e(this).find(".reset").click(function () { e(this).attr("onsubmit", "return false"); a.trigger("reset"); a.find("*").removeClass("invalid").removeClass("valid"); a.find(".error-msg").remove(); return false }); e(this).on("focusout", e(".cep"), function () { t = o; e(this).find(".cep").each(function () { if (e.trim(e(this).val()) != "") { var t = e.ajax({ url: "http://cep.republicavirtual.com.br/web_cep.php?cep=" + e.trim(e(this).val().replace("-", "")) + "&formato=json", async: false }).responseText; t = e.parseJSON(t); if (t.resultado == 0) { r(e(this), o.cepMsg, "cep") } else { if (e.isFunction(o.callbackCep)) { var n = e.Callbacks(); n.add(o.callbackCep); n.fire(t) } s(e(this)) } } }) }); e(this).submit(function (r) { t = o; r.stopPropagation(); if (!n(e(this), o)) { r.preventDefault() } }) } })(jQuery)